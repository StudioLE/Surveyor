name: CI/CD

on:
  push:

jobs:

  test-ubuntu:
    name: Ubuntu
    uses: StudioLE/Actions/.github/workflows/dotnet-test.yml@v6
    with:
      project: ""
      os: ubuntu-latest
      nuget_feed: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      nuget_username: ${{ github.repository_owner }}
      pack: true
    secrets:
      nuget_password: ${{ secrets.PACKAGES_TOKEN }}

  test-windows:
    name: Windows
    if: ${{ github.ref_type == 'branch' && contains(fromJSON('["main", "alpha", "beta", "release"]'), github.ref_name) }}
    uses: StudioLE/Actions/.github/workflows/dotnet-test.yml@v6
    with:
      project: ""
      os: windows-latest
      nuget_feed: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      nuget_username: ${{ github.repository_owner }}
    secrets:
      nuget_password: ${{ secrets.PACKAGES_TOKEN }}

  publish-cli-linux:
    name: Linux CLI
    if: ${{ github.ref_type == 'branch' && contains(fromJSON('["main", "alpha", "beta", "release"]'), github.ref_name) }}
    uses: StudioLE/Actions/.github/workflows/dotnet-publish.yml@v6
    with:
      project: Surveyor.Cli/src/Surveyor.Cli.csproj
      runtime: linux-x64
      npm: ""
      workload: ""
      properties: >
        -p:PublishSingleFile=true
        -p:IncludeNativeLibrariesForSelfExtract=true
        -p:SelfContained=false
        -p:DebugType=embedded
        -p:GenerateDocumentationFile=false
      artifact: Cli-Linux
      nuget_feed: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      nuget_username: ${{ github.repository_owner }}
    secrets:
      nuget_password: ${{ secrets.PACKAGES_TOKEN }}

  publish-cli-windows:
    name: Windows CLI
    if: ${{ github.ref_type == 'branch' && contains(fromJSON('["main", "alpha", "beta", "release"]'), github.ref_name) }}
    uses: StudioLE/Actions/.github/workflows/dotnet-publish.yml@v6
    with:
      project: Surveyor.Cli/src/Surveyor.Cli.csproj
      runtime: win-x64
      npm: ""
      workload: ""
      properties: >
        -p:PublishSingleFile=true
        -p:IncludeNativeLibrariesForSelfExtract=true
        -p:SelfContained=false
        -p:DebugType=embedded
        -p:GenerateDocumentationFile=false
      artifact: Cli-Windows
      nuget_feed: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      nuget_username: ${{ github.repository_owner }}
    secrets:
      nuget_password: ${{ secrets.PACKAGES_TOKEN }}

  documentation:
    name: Documentation
    if: ${{ github.ref_type == 'branch' && contains(fromJSON('["main", "alpha", "beta", "release"]'), github.ref_name) }}
    uses: StudioLE/Actions/.github/workflows/illuminate-generate.yml@v6
    with:
      project: ""
      os: ubuntu-latest
      nuget_feed: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      nuget_username: ${{ github.repository_owner }}
      latest: ${{ github.ref_type == 'branch' && github.ref_name == 'release' }}
      source: "*/src/bin/Release/*/Surveyor.*.dll"
      section: "surveyor"
    secrets:
      nuget_password: ${{ secrets.PACKAGES_TOKEN }}

  release:
    name: Release
    if: ${{ github.ref_type == 'branch' && contains(fromJSON('["main", "alpha", "beta", "release"]'), github.ref_name) }}
    needs:
    - test-ubuntu
    uses: StudioLE/Actions/.github/workflows/surveyor-release.yml@v6
    with:
      nuget_feed: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      nuget_username: ${{ github.repository_owner }}
    secrets:
      nuget_password: ${{ secrets.PACKAGES_TOKEN }}

  push-tests:
    name: Test Results
    if: ${{ always() }}
    needs:
    - test-ubuntu
    uses: StudioLE/Actions/.github/workflows/push-to-repo.yml@v6
    with:
      repo: StudioLE/Tests
      artifact: Tests-Linux-X64
      rm: "${{ github.repository }}/${{ github.run_id }}"
      path: "${{ github.repository }}/${{ github.run_id }}"
      message: "feat(${{ github.repository }}): Added test results for ${{ github.sha }}"
    secrets:
      repo_token: ${{ secrets.TESTS_TOKEN }}

  push-packages-github:
    name: GitHub Packages
    needs:
    - release
    # Surveyor can't use Surveyor.BuildVersioning due to circular reference
    # so the package must be explicitly built with the version number
    uses: StudioLE/Actions/.github/workflows/push-to-nuget-with-rebuild.yml@v6
    with:
      project: ""
      version: ${{ needs.release.outputs.version }}
      nuget_feed: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
      nuget_username: ${{ github.repository_owner }}
      target_nuget_feed: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
    secrets:
      nuget_password: ${{ secrets.PACKAGES_TOKEN }}
      target_nuget_api_key: ${{ secrets.GITHUB_TOKEN }}

  push-cli-linux:
    name: Linux Cli
    needs:
    - publish-cli-linux
    - release
    uses: StudioLE/Actions/.github/workflows/push-to-github-releases.yml@v6
    with:
      artifact: Cli-Linux
      name: Surveyor-linux-x64-v${{ needs.release.outputs.version }}
      file: true
      version: ${{ needs.release.outputs.version }}

  push-cli-windows:
    name: Windows Cli
    needs:
    - test-windows
    - publish-cli-windows
    - release
    uses: StudioLE/Actions/.github/workflows/push-to-github-releases.yml@v6
    with:
      artifact: Cli-Windows
      name: Surveyor-win-x64-v${{ needs.release.outputs.version }}.exe
      file: true
      version: ${{ needs.release.outputs.version }}

  push-documentation:
    name: Documentation
    needs:
    - documentation
    - release
    uses: StudioLE/Actions/.github/workflows/push-to-repo.yml@v6
    with:
      repo: StudioLE/Documentation
      artifact: Documentation
      path: ""
      message: "feat(surveyor): Added documentation for v${{ needs.release.outputs.version }}"
    secrets:
      repo_token: ${{ secrets.DOCUMENTATION_TOKEN }}

  environment:
    name: Environment
    if: ${{ needs.release.outputs.environment != '' }}
    needs:
    - release
    runs-on: ubuntu-latest
    environment: ${{ needs.release.outputs.environment }}
    steps:
    - run: |
        echo "Environment: ${{ needs.release.outputs.environment }}"
